"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

type GameState {
  isCalling: Boolean!
  players: [Player!]!
}

type Mutation {
  register: UUID!

  """
  Clients that want admin privileges send their key.
  The bool return is for if the keys match or not.
  """
  adminChallenge(key: String!): Boolean!
  heartbeat(playerId: UUID!): Boolean!
  setPlayerName(playerId: UUID!, name: String!): Player
  setPlayerCard(playerId: UUID!, card: Int): Player
  removePlayer(playerId: UUID!): Boolean!
  call: Boolean!
  resume: Boolean!
  reset: Boolean!
}

type Player {
  id: UUID!

  """The name displayed with the cards."""
  name: String!

  """Index into the card data, `CARDS`."""
  selectedCard: Int
  idle: Boolean!
}

type Query {
  cards: [String!]!
  gameState: GameState!
}

type Subscription {
  gameState: GameState!
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as Strings
within GraphQL. UUIDs are used to assign unique identifiers to entities without requiring a central
allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID
